 Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5

All root-to-leaf paths are:

["1->2->5", "1->3"]

c++:
//用dfs深度优先搜索，每访问一个节点，就将它的val加到字符串后面，如果一条路走到最后了，就将字符串放到vector中
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> res;
    void dfs(TreeNode* root,string str){
        str+=to_string(root->val);
        if(!root->left&&!root->right) res.push_back(str);
        else{
            if(root->left) dfs(root->left,str+"->");
            if(root->right) dfs(root->right,str+"->");
        }
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        string str="";
        if(root) dfs(root,str);
        return res;
    }
};
