Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


C:


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target) {
    static int answer[2]={0};  //题目中所给的返回值为两个，那么若想调用函数使其有两个返回值，最好的方法就是使用数组，返回数组的首地址，但需要注意的是，返回的数组首地址所指向的不能是动态变量，例如若函数中定义数组，当函数被调用后就释放内存空间了，这样指针指向的就不一定是什么数了，因此用静态变量初始化answer数组
    int i,j;
    for(i=0;i<numsSize-1;i++)
    {
        for(j=i+1;j<numsSize;j++)
        {
            if(nums[i]+nums[j]==target)
            {
                answer[0]=i;
                answer[1]=j;
            }
        }
    }
    return answer;
}
