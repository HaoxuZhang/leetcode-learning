Given an integer array, find three numbers whose product is maximum and output the maximum product.

Example 1:

Input: [1,2,3]
Output: 6

Example 2:

Input: [1,2,3,4]
Output: 24

Note:

    The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
    Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.

c:
//先对数组排序，由于有负数和正数，所以最大相乘有最后三位数以及最前面两位乘以最后一位这两种情况
void sort(int *a, int left, int right)
{
    if(left >= right)
    {
        return ;
    }
    int i = left;
    int j = right;
    int key = a[left];
    while(i < j)                              
    {
        while(i < j && key <= a[j])
        {
            j--;
        }
        a[i] = a[j];
        while(i < j && key >= a[i])
        {
            i++;
        }
        a[j] = a[i];
    }
     a[i] = key;
    sort(a, left, i - 1);
    sort(a, i + 1, right);

}
int maximumProduct(int* nums, int numsSize) {
    sort(nums,0,numsSize-1);
    int a=nums[numsSize-1]*nums[numsSize-2]*nums[numsSize-3];
    int b=nums[0]*nums[1]*nums[numsSize-1];
    int max=a>b?a:b;
    return max;
}
