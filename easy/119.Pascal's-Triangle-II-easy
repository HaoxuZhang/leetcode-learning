Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 


C:


//前面一部分跟第118题一样，先分配一片空间，把最后一行的值返回即可
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* getRow(int rowIndex, int* returnSize) {
    *returnSize=rowIndex+1;
    int* p=NULL;
    p=malloc(sizeof(int)*(rowIndex+1));
    int** q=(int**)malloc(sizeof(int*)*(rowIndex+1));
    int i,j;
    for(i=0;i<rowIndex+1;i++)
    {
        q[i]=malloc(sizeof(int)*(i+1));
        for(j=0;j<i+1;j++)
        {
            if(i==0||j==0||j==i)
                q[i][j]=1;
            else
                q[i][j]=q[i-1][j-1]+q[i-1][j];
        }
    }
    for(i=0;i<rowIndex+1;i++)
        p[i]=q[rowIndex][i];
    return p;
}
