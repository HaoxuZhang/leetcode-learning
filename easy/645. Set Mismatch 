 The set S originally contains numbers from 1 to n. But unfortunately, due to the data error, one of the numbers in the set got duplicated to another number in the set, which results in repetition of one number and loss of another number.

Given an array nums representing the data status of this set after the error. Your task is to firstly find the number occurs twice and then find the number that is missing. Return them in the form of an array.

Example 1:

Input: nums = [1,2,2,4]
Output: [2,3]

Note:

    The given array size will in the range [2, 10000].
    The given array's numbers won't have any order.

c++:
//先sort，然后遍历数组，如果后一个元素与前一个元素相同，那么这一定是一个重复元素，用dup记录它。再去找丢失的那个元素，后一个元素若是比前一个元素大1以上，可以看出变了的数是哪个。但是有时并不能找到，比如最后一个元素变成前面的元素。例如1,2,2,3,4这种情况找不到，那就判断最后一个元素是不是等于长度即可。还有变的元素在第一位的时候，例如2,2,3这种情况，因此需要将mis的初始值设置为1
class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<int> res;
        int dup=-1,mis=1;
        for(int i=1;i<nums.size();i++){
            if(nums[i]==nums[i-1]) dup=nums[i];
            else if(nums[i]>nums[i-1]+1) mis=nums[i-1]+1;
        }
        res.push_back(dup);
        if(nums[nums.size()-1]==nums.size()) res.push_back(mis);
        else res.push_back(nums.size());
        return res;
    }
};
