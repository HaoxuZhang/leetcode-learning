 Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

click to show more practice.
More practice:

If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.




C:





//遍历，max一开始为0，若是正的，则保留max值，若是负的，则舍弃，重新令max=0。总体来说，max是先于realmax的一个求和数，如果发现max比realmax大，那么就将max的值赋给realmax
int maxSubArray(int* nums, int numsSize) {
    int max=0;
    int realmax=nums[0];
    int i;
    for(i=0;i<numsSize;i++)
    {
        max=max+nums[i];
        if(max<0)
        {
            realmax=(realmax>max)?realmax:max;
            max=0;
            continue;
        }
        else
            realmax=(realmax>max)?realmax:max;
    }
    return realmax;
}
